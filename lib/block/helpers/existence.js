// Generated by CoffeeScript 1.9.2
(function() {
  module.exports = function(chai, utils) {
    var _overwriteMethod, overwriteAnMethod, overwriteChainableMethod, overwriteMethod;
    _overwriteMethod = function(preposition) {
      return function(_super) {
        return function(propertyName) {
          var block, property;
          switch (propertyName) {
            case "cover":
            case "description":
            case "html":
            case "subtitle":
            case "title":
              block = this._obj;
              property = block[propertyName];
              utils.flag(this, "block.propertyName", propertyName);
              utils.flag(this, "block." + propertyName, property);
              return this.assert(property != null, "expected block " + block.id + " to have a " + propertyName, "expected block " + block.id + " to not have a " + propertyName);
            default:
              return _super.apply(this, arguments);
          }
        };
      };
    };
    overwriteMethod = function(name, preposition) {
      var method;
      method = _overwriteMethod(preposition);
      return chai.Assertion.overwriteMethod(name, method);
    };
    overwriteChainableMethod = function(name, preposition) {
      var method, property;
      method = _overwriteMethod(preposition);
      property = function(_super) {
        return _super;
      };
      return chai.Assertion.overwriteChainableMethod(name, method, property);
    };
    overwriteAnMethod = function(name) {
      return overwriteChainableMethod(name, name);
    };
    overwriteAnMethod("a");
    return overwriteAnMethod("an");
  };

}).call(this);
