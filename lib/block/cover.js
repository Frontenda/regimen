// Generated by CoffeeScript 1.9.2
(function() {
  var equality, existence;

  equality = require("./helpers/equality");

  existence = require("./helpers/existence");

  module.exports = function(chai, utils) {
    var addOrientationMethod, property;
    property = "cover";
    equality.call(this, chai, utils, property);
    existence.call(this, chai, utils, property);
    addOrientationMethod = function(name) {
      return chai.Assertion.addMethod(name, function(orientation) {
        var actual, block, cover, expected;
        block = this._obj;
        cover = block.cover;
        if (orientation != null) {
          expected = orientation;
          actual = cover != null ? cover.orientation : void 0;
          return this.assert(expected === actual, "expected block " + block.id + " to have a cover with orientation \#{exp} but got \#{act}", "expected block " + block.id + " to have a cover without orientation \#{exp} but got \#{act}", expected, actual);
        } else {
          return this.assert((cover != null ? cover.orientation : void 0) != null, "expected block " + block.id + " to have a cover with an orientation", "expected block " + block.id + " to have a cover without an orientation");
        }
      });
    };
    addOrientationMethod("orientation");
    return addOrientationMethod("oriented");
  };

}).call(this);
